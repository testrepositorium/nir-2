import { EThreatInfoField } from "../components/threat-info/entities/threat-info-field.enum";
import { EThreat } from "../enums/threat.enum";
import { IThreatCard } from "../interfaces/threat-card.interface";
import { LThreatCard } from "../labels/threat-card.label";

export abstract class ThreatsLib {
    /**
     * Справочник карточек угроз
     */
    public static readonly threatsList: IThreatCard[] = [
        {
            [LThreatCard.TITLE]: 'SQL-инъекция',
            [LThreatCard.ROUTE]: EThreat.SQL_INJECTION,
            [LThreatCard.IMAGE]: 'assets/icons/injector.png'
        },
        {
            [LThreatCard.TITLE]: 'DDoS-атака',
            [LThreatCard.ROUTE]: EThreat.DDOS_ATTACK,
            [LThreatCard.IMAGE]: 'assets/icons/ddos-attack.png'
        },
        {
            [LThreatCard.TITLE]: 'XSS-атака',
            [LThreatCard.ROUTE]: EThreat.XSS_ATTACK,
            [LThreatCard.IMAGE]: 'assets/icons/xss-attack.png'
        },
        {
            [LThreatCard.TITLE]: 'Нарушение контроля доступа',
            [LThreatCard.ROUTE]: EThreat.BROKEN_ACCESS_CONTROL,
            [LThreatCard.IMAGE]: 'assets/icons/broken-access.png'
        }
    ];

    /**
     * Справочная информация по угрозам для отображения на странице угрозы
     */
    public static threatInfoThesaurus: Record<EThreat, Record<string, string>> = {
        [EThreat.SQL_INJECTION]: {
            [EThreatInfoField.TITLE]: 'SQL-инъекция',
            [EThreatInfoField.DESCRIPTION]: '<span><b>SQL-инъекция</b> - это уязвимость веб-безопасности, которая позволяет злоумышленнику вмешиваться в запросы, которые приложение делает к своей базе данных. ' +
                                            'Как правило, это позволяет просматривать данные, которые он обычно не может получить. Это могут быть других пользователей, или любые другие данные, доступ к которым имеет само приложение. ' +
                                            'Во многих случаях злоумышленник может изменять или удалять эти данные, вызывая постоянные изменения в содержимом или поведении приложения.</span>',
            [EThreatInfoField.CONSEQUANCES]:'<span>Успешная атака SQL-инъекции может привести к <b>несанкционированному доступу</b> к конфиденциальным данным, таким как пароли, данные кредитных карт или личная информация пользователей. ' +
                                             'Многие громкие утечки данных в последние годы стали результатом атак с использованием SQL-инъекций, что привело к ухудшению репутации и штрафам со стороны регулирующих органов. ' +
                                             'В некоторых случаях злоумышленник может получить постоянный <b>черный ход</b> в системы организации, что приводит к долгосрочной угрозе, которая может оставаться незамеченной в течение длительного периода времени.</span>',
            [EThreatInfoField.PROTECTION]: 'Существует несколько рекомендаций, позволяющих минимизировать риски пострадать от SQL-инъекций:' +
                                           '<ul>' +
                                           '<li>Использование параметрических запросов. Вместо того чтобы вставлять пользовательский ввод напрямую в запрос, необходимо использовать специальные местозаменители (проще говоря – использовать POST-запрос, вместо GET-запроса).' +
                                           'Это гарантирует, что ввод будет обработан как данные, а не как часть SQL-кода.</li>' +
                                           '<li>Использование экранирование специальных символов. В некоторых случаях, когда использование параметризованных запросов невозможно, следует экранировать специальные символы в пользовательском вводе.' +
                                           'Это поможет предотвратить внедрение вредоносного кода в ваши SQL-запросы.</li>' +
                                           '<li>Минимизация прав доступа. Если мы создадим систему прав, в которой каждый человек может получать только определенные новости, то данная система сможет прервать запрос, если заметит, ' +
                                           'что получаемые новости не соответствуют текущим пользовательским правам.</li>' +
                                           '<li>Проверка входных данных на соответствие ожидаемому формату. Это может помочь отсеять потенциально опасные запросы. Фильтрация входных данных позволяет убрать нежелательные символы и строки, которые могут быть использованы в SQL инъекциях</li>' +
                                           '</ul>',
            [EThreatInfoField.LINKS]: '<a href="https://habr.com/ru/articles/725134/" target="_blank">https://habr.com/ru/articles/725134/</a><br>' +
                                      '<a href="https://sky.pro/wiki/javascript/zashita-ot-sql-inuekcii-metody-primery-i-rekomendacii/" target="_blank">https://sky.pro/wiki/javascript/zashita-ot-sql-inuekcii-metody-primery-i-rekomendacii/</a>'
        },
        [EThreat.DDOS_ATTACK]: {
            [EThreatInfoField.TITLE]: 'DDoS-атака',
            [EThreatInfoField.DESCRIPTION]: '<span>Любая информационная система, в том числе и веб-сервер, может одновременно обработать ограниченное число запросов. Пропускная способность канала связи, соединяющего его с интернетом, тоже не бесконечна. ' +
                                            'Если количество запросов очень велико, канал связи или веб- ресурс, который к нему подключён, перестают работать. Именно этим пользуются киберпреступники, когда организуют <b>DDoS-атаку</b>. ' +
                                            'Они отправляют на веб-ресурс огромное количество запросов одновременно. Ещё один способ — начать загружать на сервер через форму обратной связи множество «тяжёлых» файлов.</span>',
            [EThreatInfoField.CONSEQUANCES]: '<span>Каждая успешная DDoS-атака может закончиться тем, что ваш сайт <b>потеряет работоспособность, клиенты уйдут к конкурентам, а прибыль снизится</b>. ' +
                                             'Если веб-ресурс имеет критическую значимость, то может произойти и куда более страшное – <b>утрата доверия клиентов и потеря репутации</b>. ' +
                                             'Репутационные последствия от отказа в обслуживании носят долгосрочный характер и их трудно исправлять, что несопоставимо со временем и усилиями, которые нужны, чтобы организовать DDoS-атаку. ' +
                                             'Чаще всего злоумышленники стремятся добиться сбоев в ключевых функциях сайта, например, просмотр каталога или страница оплаты товара.</span>',
            [EThreatInfoField.PROTECTION]: 'Универсального средства защиты от DDoS-атак не существует. В качестве превентивных мер рекомендуется:' +
                                           '<ul>' +
                                           '<li>предусмотреть резерв производительности сервера.</li>' +
                                           '<li>правильно настроить хостинг веб-ресурса, DNS-серверы и протоколы.</li>' +
                                           '<li>ограничить объём файлов для закачки через форму обратной связи.</li>' +
                                           '<li>установить CAPTCHA на выполнение действий, способных привести к перегрузке сервера или каналов связи.</li>' +
                                           '</ul>',
            [EThreatInfoField.LINKS]: '<a href="http://www.sberbank.ru/ru/person/kibrary/vocabulary/ddos" target="_blank">http://www.sberbank.ru/ru/person/kibrary/vocabulary/ddos</a><br>' +
                                      '<a href="https://ddos-guard.net/ru/blog/chem-opasny-ddos-ataki" target="_blank">https://ddos-guard.net/ru/blog/chem-opasny-ddos-ataki</a>'
        },
        [EThreat.XSS_ATTACK]: {
            [EThreatInfoField.TITLE]: 'XSS-атака',
            [EThreatInfoField.DESCRIPTION]: '<span><b>XSS</b> (межсайтовый скриптинг) – одна из разновидностей атак на веб-системы, ' +
                                            'которая подразумевает внедрение вредоносного кода на определенную страницу сайта и взаимодействие этого кода с удаленным сервером злоумышленников при открытии страницы пользователем.</span>',
            [EThreatInfoField.CONSEQUANCES]: '<span>Основная цель межсайтового скриптинга – <b>кража cookies</b> пользователей при помощи встроенного на сервере скрипта с дальнейшей выборкой необходимых данных и использованием их для последующих атак и взломов. ' +
                                             'Злоумышленник  осуществляет  атаку  пользователей  не  напрямую,  а  с использованием уязвимостей веб-сайта, который посещают жертвы, и внедряет специальный JavaScript. В браузере у пользователей этот код отображается как единая часть сайта. ' +
                                             'При этом посещаемый ресурс по факту является соучастником XSS-атаки.</span>',
            [EThreatInfoField.PROTECTION]: 'Аналогично SQL-инъекции нельзя гарантировать абсолютную защиту сайта от потенциального взлома с помощью XSS-атак, однако можно разработать определенный список рекомендаций, который так же минимизирует возможный ущерб. К этому списку можно отнести:' +
                                           '<ul>' +
                                           '<li>Необходимость в кодировании вводимой информации, при наличии различных элементов с пользовательским вводом.</li>' +
                                           '<li>Создание различных видов валидаций, экранирования, чтобы пользователь не мог ввести недопустимый формат данных (самый просто пример – запрет на ввод символов «<» и «>»).</li>' +
                                           '<li>Создание валидации как на стороне клиента (Frontend), так и на стороне сервера (Backend), который будет выбрасывать ошибки, если были обнаружены неверные или подозрительные данные.</li>' +
                                           '<li>Регулярные проверки сайта на корректную работу, обновление кодовой базы, поиск возможных уязвимостей.</li>' +
                                           '</ul>',
            [EThreatInfoField.LINKS]: '<a href="https://wiki.rookee.ru/cross- site-scripting/" target="_blank">https://wiki.rookee.ru/cross- site-scripting/</a><br>' +
                                      '<a href="https://habr.com/ru/articles/511318/" target="_blank">https://habr.com/ru/articles/511318/</a>'
        },
        [EThreat.BROKEN_ACCESS_CONTROL]: {
            [EThreatInfoField.TITLE]: 'Нарушение контроля доступа',
            [EThreatInfoField.DESCRIPTION]: '<span>Все прекрасно знают о том, что авторизация предоставляет пользователю права на выполнение определённых действий, а также процесс проверки (подтверждения) данных прав при попытке выполнения этих действий. ' +
                                            'Авторизация не эквивалентна аутентификации. После успешной аутентификации авторизация определяет, к каким функциям и данным может получить доступ пользователь, обеспечивая при этом надлежащее разграничение прав доступа. ' +
                                            'Именно поэтому веб-приложению необходимы средства контроля доступа, позволяющие его пользователям использовать веб-приложение с различными привилегиями. ' +
                                            '<b>Контроль доступа</b> — это применение ограничений на то, кто (или что) может выполнять различные функции и получать доступ к запрошенным ресурсам. Нарушенный контроль доступа часто встречающаяся и часто критическая уязвимость в системе безопасности.</span>',
            [EThreatInfoField.CONSEQUANCES]: '<span>Способ нарушения контроля доступа полностью зависит от архитектуры приложения и от ее возможных уязвимостей. Например, переход на сайт администратора может осуществляться по ссылке. ' +
                                             'Если при переходе не будет осуществляться проверка прав текущей сессии, то любой человек сможет <b>получить доступ</b> к профилю администратора. Другим примером может являться нарушение контроля доступа через XSS-атаку. ' +
                                             'Если пользователю удалось внедрить на сайт вредоносный код, который будет <b>отправлять cookie</b> - файлы пользователей на некоторый сервер после их авторизации, то злоумышленнику, фактически, удастся получить доступ к личным кабинетам пользователей. </span>',
            [EThreatInfoField.PROTECTION]: 'Контроль доступа - это крайне важная часть пользовательских сайтов, поэтому составление рекомендаций имеет большое значение. К этим рекомендациям можно отнести:' +
                                           '<ul>' +
                                           '<li>Документальное составление полного списка прав и полномочий каждой категории.</li>' +
                                           '<li>Использование кодировок для передачи текущих прав.</li>' +
                                           '<li>Проверка при каждом запросе или переходе на новую страницу на текущие права (есть ли у текущих прав на осуществление данного действия).</li>' +
                                           '<li>Шифрование данных в HTTP-запросах.</li>' +
                                           '<li>Создание ограничений на уровне сервера на список IP-адресов, которые могут заходить на сайт.</li>' +
                                           '<li>Использование токенов.</li>' +
                                           '<li>Хранение данных в HTTP-заголовках</li>' +
                                           '</ul>',
            [EThreatInfoField.LINKS]: '<a href="https://cqr.company/ru/web-vulnerabilities/access-control-weaknesses/" target="_blank">https://cqr.company/ru/web-vulnerabilities/access-control-weaknesses/</a><br>' +
                                      '<a href="https://habr.com/ru/articles/654769/" target="_blank">https://habr.com/ru/articles/654769/</a>'
        }
    };
}
